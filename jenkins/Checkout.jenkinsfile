pipeline {
    agent { node { label 'Ansible' } }
    options { 
      ansiColor('xterm')
      timestamps () }
    triggers {
        pollSCM 'H/1 * * * *'
    }

    stages {
        stage('GIT') {
            steps {
                echo "========== Start checkout from GitHUB =========="
                git branch: 'main',
                url: 'https://github.com/nsdementar/DevOps_Course_Exam.git'
                sh 'ls -al'
            }
        }

        stage('Terraform plan') {
            steps {
              script {
                echo "========== Start Terraform plan =========="
                sh '''cd terraform
                terraform init
                terraform plan -out=tfplan -input=false'''
                }
            }
        }

        stage('Approval') {
            steps {
              script {
                def userInput = input(id: 'confirm', message: 'Apply Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
                }
            }
        }

        stage('TF Apply') {
            steps {
              script {
                sh '''cd terraform
                terraform apply -input=false tfplan'''
            }
          }
        }

        stage('Start Ansible Playbook') {
            steps {
                echo "========== Start Ansible Playbook =========="
                git branch: 'main',
                url: 'https://github.com/kubernetes-sigs/kubespray.git'
                sh 'ansible-playbook -i terraform/hosts kubespray/cluster.yml --become --become-user=root --private-key=terraform/k8s-cluster-private'
            }
        }
    }
}
